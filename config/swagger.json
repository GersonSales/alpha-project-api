{
  "swagger": "2.0",
  "info": {
    "description": "A Web Development class project.",
    "version": "0.0.2",
    "title": "Alpha project.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token"
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users in system",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized: "
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new User in system",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User that we want to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user with given ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user with give ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "User with new values of properties",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user with given ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Attempt to log use in system",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User that we want to login with",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User token generated",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Invalid user e-mail or password"
          }
        }
      }
    },
    "/dish": {
      "get": {
        "tags": [
          "Dish"
        ],
        "summary": "Get all dishes in system",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Dish"
        ],
        "summary": "Create new Dish in system",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dish",
            "description": "Dish that we want to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New dish is created",
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        }
      }
    },
    "/dish/{id}": {
      "put": {
        "tags": [
          "Dish"
        ],
        "summary": "Update dish with give ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dish that we want to find",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dish",
            "description": "Dish with new values of properties",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dish is updated",
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dish"
        ],
        "summary": "Delete dish with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dish that we want to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dish is deleted",
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "firstName",
        "lastName",
        "phone",
        "role"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      },
      "example": {
        "firstName": "User",
        "lastName": "Name",
        "email": "user@email.com",
        "phone": "(99)99999-9999",
        "password": "userPassword",
        "role": "CLIENT"
      }
    },
    "Auth": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "example": {
        "email": "user@email.com",
        "password": "userPassword"
      }
    },
    "Token": {
      "required": [
        "x-access-token"
      ],
      "properties": {
        "x-access-token": {
          "type": "string"
        }
      },
      "example": {
        "x-access-token": "eyJhbGciI1NiIsInR5cC.eyJlbWFpbTc2MTEzfQ.jJhI2hgPM4ZV--mSB9tHSY"
      }
    },
    "Dish": {
      "required": [
        "name",
        "price",
        "type",
        "description",
        "image"

      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "example": {
        "name": "Taco",
        "price": "15.99",
        "type": "DINNER",
        "description": "A taco is a traditional Mexican dish consisting of a corn or wheat tortilla folded or rolled around a filling. A taco can be made with a variety of fillings, including beef, pork, chicken, seafood, vegetables, and cheese, allowing great versatility and variety.",
        "image": "https://goo.gl/zaA8oG"
      }
    }
  }
}